# Keyboard
keyboard us
mouse
# System language
lang en_US
langsupport en_US
# System timezone
timezone Asia/Shanghai

# Network information
#network  --bootproto=static --device=link --ip=192.168.199.199 --netmask=255.255.255.0 --gateway=192.168.199.1 --nameserver=202.106.0.20 --onboot=yes --noipv6  --activate
network --bootproto=dhcp --device=eth0 --nameserver=202.106.0.20 --onboot=yes --noipv6  --activate
network --hostname=localhost.localdomain

# System authorization information
auth --enableshadow --passalgo=sha512
# Root password
rootpw --iscrypted $6$tVc9I8l4LOCmR6TA$yGkBWSgAGli474zKAB3GbDSoWSgs2s1PUGEVeTRVc7puySnXG5BWux64DEEj3.1rmWYcjsJIqgOoSJYMzujRF/
#create nqsky deployment/operation user
user nationskymgt --fullname "nationskymgt" --iscrypted --password="$6$tVc9I8l4LOCmR6TA$mfGLid1kpSvbJIQX9/RH1pXus/N3FAlGDDHHUlAu5zZTRT.S26ULrfmAD8x7eaHF.1SDJlsWaRLDJIB6N2GIS." --shell=/bin/bash
#user --groups=Nationskymgt,wheel --name=Nationskymgt --iscrypted --password="$6$tVc9I8l4LOCmR6TA$mfGLid1kpSvbJIQX9/RH1pXus/N3FAlGDDHHUlAu5zZTRT.S26ULrfmAD8x7eaHF.1SDJlsWaRLDJIB6N2GIS." --shell=/bin/bash

reboot
#version=DEVEL
install
# Use CDROM installation media
cdrom
# Use graphical install
#graphical
text
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
selinux --disabled
# Firewall configuration. EMM allows remote control port 8844/81 as well.
firewall --enabled --ssh --port=443:tcp
# Do not configure the X Window System
skipx
# System bootloader configuration
bootloader --location=mbr --driveorder=sda --append=" rhgb crashkernel=auto quiet"
# Partition clearing information
zerombr
clearpart --all

part /boot --fstype="xfs" --size=500
part pv.008002 --grow --size=1
part /boot/efi --fstype="xfs" --size=500

volgroup vg_batmanbuild --pesize=4096 pv.008002
logvol / --fstype=xfs --name=lv_root --vgname=vg_batmanbuild --grow --size=1024
logvol swap --name=lv_swap --vgname=vg_batmanbuild --grow --size=1024 --maxsize=10240

reboot

%post
#!/bin/sh
set -x -v
echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse" > /etc/apt/source.list
echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse" >> /etc/apt/source.list
echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse" >> /etc/apt/source.list
echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse" >> /etc/apt/source.list
echo "deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse" >> /etc/apt/source.list
echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse" >> /etc/apt/source.list
echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse" >> /etc/apt/source.list
echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse" >> /etc/apt/source.list
echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse" >> /etc/apt/source.list
echo "deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse" >> /etc/apt/source.list

%end

%packages
openssl
openssh-server
redis-server
mongodb
activemq
ffmpeg
nodejs
npm
python
libcgi-session-perl
mysql-server
mysql-client
libmysqlclient-dev
openjdk-8-jdk
nginx
thrift-compiler
spawn-fcgi
fcgiwrap
#policycoreutils
#common
libevent-2.1-6
libevent-dev
autogen
expat
libzip5
libdb-dev
gcc
tcl
ntp
ntpdate
zip
lrzsz
vim
curl
wget
expect
net-tools
traceroute
vsftpd
#ldap-utils

#python
python-kerberos
python-dateutil
python-ldap
python-cffi
python-cherrypy
python-qrcode
python-cryptography
python-yubico
keyutils
python-nss
python-sss
python-lxml
python-babel
python-genshi
python-netaddr
python-dev
python-openssl
python-libipa-hbac
python-thrift
python-mysqldb
libipa-hbac-dev
blog4cplus-1.1-9
#activemq-cpp https://github.com/apache/activemq-cpp
bcppunit-dev
libsasl2-dev

%end

%post
#!/bin/sh
set -x -v
sed -i -e "s/^#PermitRootLogin prohibit-password/PermitRootLogin yes/g" /etc/ssh/sshd_config
sed -i -e "s/Subsystem/#Subsystem/g" /etc/ssh/sshd_config
echo "Subsystem sftp internal-sftp" >> /etc/ssh/sshd_config
sed -i -e "s/^#UseLogin no/UseLogin yes/g" /etc/ssh/sshd_config
dos2unix  /etc/ssh/sshd_config

# Clean
apt update
apt list --upgradable
apt --fix-broken install
apt-get -f -y install
apt-get -y autoremove
apt-get clean
rm -f /var/cache/apt/*cache.bin
rm -f /var/lib/apt/lists/*

%end

%post --nochroot
#!/bin/sh
set -x -v
exec 1>/mnt/sysimage/root/poststage1.log 2>&1
echo "==> copying files from media to install drive..."
cp -rf /run/install/repo/postinstall /mnt/sysimage/root

cp -rf /run/install/repo/nqskypkgs /mnt/sysimage/root/

%end

%post
#!/bin/sh
set -x -v
exec 1>/root/nqskypkgs-postinstall.log 2>&1
for pkg in $(dir /root/nqskypkgs); do
  if [[ -f /root/nqskypkgs/$pkg/postinstall/postinstall.sh ]]; then
    echo "==> executing postinstall for $pkg"
    cd /root/nqskypkgs/$pkg/postinstall
    chmod +x postinstall.sh
    ./postinstall.sh
    echo "==> completed postinstall for $pkg"
  else
    echo "==> can't find postinstall for $pkg. ignore..."
  fi
done

%end

%post
#!/bin/sh
set -x -v
exec 1>/root/poststage2.log 2>&1
echo "set -o vi" >>/root/.bashrc
echo "alias s='rsync -havz -e ssh --progress'" >>/root/.bashrc
echo "set nu" >>/root/.vimrc

#banner text 
rm -rf /etc/update-motd.d/
echo "Welcome to NQSKY System !" > /var/run/motd.dynamic

#clean up
#rm -rf /root/postinstall 2>/dev/null
#rm -rf /root/nqskypkgs 2>/dev/null
%end

